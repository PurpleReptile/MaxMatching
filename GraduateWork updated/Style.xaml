<Application x:Class="GraduateWork_updated.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="Main.xaml">
    <Application.Resources>

        <Style x:Key="RectBorderStyle" TargetType="Rectangle">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        </Style>

        <!--  ***** Window *****  -->
        <Style x:Key="CustomWindow" TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="MinWidth" Value="950" />
            <Setter Property="MinHeight" Value="580" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <!--  ***** Tabs *****  -->
        <Style x:Key="top_menu_tabs">
            <Setter Property="Control.FontFamily" Value="Calibri" />
            <Setter Property="Control.FontSize" Value="18" />
            <Setter Property="Control.Foreground" Value="White" />
            <Setter Property="Control.Padding" Value="0" />
        </Style>

        <!--  ***** Labels *****  -->
        <Style x:Key="styleLabel_H1">
            <Setter Property="Control.FontFamily" Value="Calibri" />
            <Setter Property="Control.FontSize" Value="18" />
            <Setter Property="Control.FontWeight" Value="SemiBold" />
            <Setter Property="Control.Foreground" Value="Black" />
            <Setter Property="Control.Margin" Value="0" />
            <Setter Property="Control.Background" Value="#ffef96" />
            <Setter Property="Control.Padding" Value="12 0" />
        </Style>
        <Style x:Key="styleLabel_H2">
            <Setter Property="Control.FontSize" Value="14" />
            <Setter Property="Control.VerticalAlignment" Value="Center" />
            <Setter Property="Control.HorizontalAlignment" Value="Right" />
            <Setter Property="Control.Margin" Value="0" />
            <Setter Property="Control.Padding" Value="0" />
        </Style>
        <Style x:Key="txtBox_to_label" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Control.FontSize" Value="14" />
            <Setter Property="Control.VerticalAlignment" Value="Center" />
            <Setter Property="Control.FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="lblCountList" TargetType="{x:Type Label}">
            <Setter Property="Control.FontSize" Value="14" />
            <Setter Property="Control.VerticalAlignment" Value="Center" />
            <Setter Property="Control.Margin" Value="5 0" />
        </Style>

        <!--
            **********************************************
            ****************** Buttons *******************
            **********************************************
        -->

        <!--  GENERAL buttons  -->
        <Style x:Key="styleButton" TargetType="{x:Type Button}">
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="MinWidth" Value="20" />
            <Setter Property="MaxHeight" Value="35" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Border"
                                Background="#FF034F84"
                                BorderBrush="White"
                                BorderThickness="1.5"
                                CornerRadius="5"
                                VerticalAlignment="Stretch"
                                TextBlock.Foreground="{TemplateBinding Foreground}">

                            <ContentPresenter Name="Content"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              TextBlock.FontSize="14"
                                              TextBlock.Foreground="White" />
                            <Border.Effect>
                                <DropShadowEffect x:Name="dropShadow"
                                                  BlurRadius="0"
                                                  Opacity="0"
                                                  ShadowDepth="0"
                                                  Color="Black" />
                            </Border.Effect>
                        </Border>


                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Opacity" Value="0.4" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>


                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth"
                                                         To="1" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="BlurRadius"
                                                         To="8" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="ShadowDepth"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.1"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="BlurRadius"
                                                         To="0" />
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="dropShadow"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  buttons for information about type input matrix  -->
        <Style x:Key="styleButtonInfo" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Height" Value="18" />
            <Setter Property="Width" Value="18" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid"
                              Width="18"
                              Height="18"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center">
                            <Border x:Name="border"
                                    Background="White"
                                    BorderBrush="#FF034F84"
                                    BorderThickness="1"
                                    CornerRadius="10">

                                <ContentPresenter x:Name="text"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.FontSize="12"
                                                  TextElement.FontWeight="Bold" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Help" />
                            </Trigger>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#FF034F84" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        To="White" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetProperty="Foreground.Color"
                                                        To="White" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="BorderBrush.Color" />
                                        <ColorAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Foreground.Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="grid" Property="Opacity" Value="0.4" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ***** TextBoxs *****  -->
        <Style x:Key="styleTextBox_sizeInputMatrix">
            <Setter Property="Control.FontSize" Value="14" />
            <Setter Property="Control.Width" Value="30" />
            <Setter Property="Control.Margin" Value="5 6 0 3" />
            <Setter Property="Control.HorizontalAlignment" Value="Left" />
            <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        </Style>


        <!--  ***** Radiobuttons *****  -->
        <Style x:Key="styleRadiobutton" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator VerticalAlignment="Center" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Width="18" Height="18">
                                    <Border Name="RadioOuter"
                                            Background="Transparent"
                                            BorderBrush="#FF034F84"
                                            BorderThickness="1.5"
                                            CornerRadius="2" />
                                    <Border Name="RadioMark"
                                            Margin="4"
                                            Background="#FF034F84"
                                            CornerRadius="0"
                                            Visibility="Hidden" />
                                </Grid>
                            </BulletDecorator.Bullet>

                            <TextBlock Margin="8, 0,0,0"
                                       FontSize="14"
                                       Foreground="Black">
                                <ContentPresenter />
                            </TextBlock>
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#034f84" />
                                <Setter TargetName="RadioOuter" Property="Background" Value="White" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="border"
                                BorderBrush="Black"
                                BorderThickness="0 0 1 1">

                            <Grid Name="grid"
                                  Margin="1 1 0 0"
                                  Background="White"
                                  Cursor="Hand"
                                  SnapsToDevicePixels="True">

                                <Label Name="lbl"
                                       Margin="5, 0"
                                       HorizontalContentAlignment="Center"
                                       VerticalContentAlignment="Center"
                                       FontSize="14" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="grid"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        To="#FF034F84" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="lbl"
                                                        Storyboard.TargetProperty="Foreground.Color"
                                                        To="White" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="BorderBrush.Color"
                                                        To="White" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="grid"
                                                        Storyboard.TargetProperty="Background.Color" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="lbl"
                                                        Storyboard.TargetProperty="Foreground.Color" />
                                        <ColorAnimation Duration="0:0:0.2"
                                                        Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="BorderBrush.Color" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="lbl" Property="Content" Value="1" />
                                <Setter TargetName="grid" Property="Background" Value="#FF034F84" />
                                <Setter TargetName="lbl" Property="Foreground" Value="White" />
                                <Setter TargetName="border" Property="BorderBrush" Value="White" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="lbl" Property="Content" Value="0" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="grid" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter TargetName="grid" Property="Opacity" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!--  combobox  -->
        <!--  Control colors  -->
        <Color x:Key="BackgroundColor">White</Color>
        <Color x:Key="BorderColor">#FF034F84</Color>
        <Color x:Key="ForegroundColor">#FF034F84</Color>

        <Color x:Key="DisabledColor">#FFF4F4F4</Color>
        <Color x:Key="DisabledBorderColor">#FF888888</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="MouseOverColor">#FFBEE6FD</Color>
        <Color x:Key="MouseOverBorderColor">#FF034F84</Color>

        <Color x:Key="SelectedColor">White</Color>
        <Color x:Key="SelectedBorderColor">#FF2C628B</Color>

        <Color x:Key="InputBorderColor">#FF034F84</Color>
        <Color x:Key="InputBackgroundColor">#FFFFFFFF</Color>

        <Color x:Key="DropDownBorderColor">#FFABADB3</Color>
        <Color x:Key="DropDownBackgroundColor">#FFFFFFFF</Color>

        <!--
            This defines the template for the button to
            expand / contract the drop donw list
        -->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <!--  / end  -->

                <!--  Different button states  -->
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MouseOverColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MouseOverBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="InputBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource MouseOverBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="InputBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="InputBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBorderColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <!--  The border around the whole control (Text and button)  -->
                <Border x:Name="Border"
                        Grid.ColumnSpan="2"
                        BorderThickness="2"
                        CornerRadius="4">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource BorderColor}" />
                    </Border.BorderBrush>
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource BackgroundColor}" />
                    </Border.Background>
                </Border>
                <!--  / end  -->

                <!--  The Text of selected item  -->
                <Border Name="Input"
                        Grid.Column="0"
                        Margin="0"
                        BorderThickness="1,1,0,1"
                        CornerRadius="4,0,0,4">
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource InputBackgroundColor}" />
                    </Border.Background>
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource InputBorderColor}" />
                    </Border.BorderBrush>
                    <!--  This border gives a solid edge to the button  -->
                    <Border Name="InputBorder"
                            Margin="0"
                            BorderThickness="0,0,1,0"
                            CornerRadius="4,0,0,4">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource InputBackgroundColor}" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderColor}" />
                        </Border.BorderBrush>
                    </Border>
                </Border>
                <!--  / end  -->

                <!--  The little arrow icon  -->
                <Path x:Name="Arrow"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource ForegroundColor}" />
                    </Path.Fill>
                </Path>
                <!--  / end  -->
            </Grid>
        </ControlTemplate>
        <!--  / end  -->

        <!--  The text of the combo box is displayed in this element (PART_ContentHost)  -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
                    Background="{TemplateBinding Background}"
                    Focusable="False" />
        </ControlTemplate>
        <!--  / end  -->

        <!--  The Combo Box  -->
        <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="MinWidth" Value="25" />
            <Setter Property="MinHeight" Value="25" />
            <!--<Setter Property="MaxWidth" Value="300" />-->
            <Setter Property="MaxHeight" Value="45" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!--
                                Defines the different states and any
                                style changes associated with them
                            -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--  / end  -->

                            <!--
                                This is the button to expand / contract the
                                drop down list. Uses resource defined above
                            -->
                            <ToggleButton x:Name="ToggleButton"
                                          ClickMode="Press"
                                          Focusable="false"
                                          IsChecked="{Binding IsDropDownOpen,
                                                              Mode=TwoWay,
                                                              RelativeSource={RelativeSource TemplatedParent}}"
                                          Template="{StaticResource ComboBoxToggleButton}" />
                            <!--  / end  -->

                            <!--  This is the style for the text of the selected item  -->
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="7,0,10,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              IsHitTestVisible="False" />
                            <!--  / end  -->

                            <!--  Displays the selected text when the combo box is disabled  -->
                            <TextBox x:Name="PART_EditableTextBox"
                                     Margin="10,0,10,0"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Background="Transparent"
                                     Focusable="True"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     Visibility="Hidden" />
                            <!--  / end  -->

                            <!--  This is the style and layout for the dropdown section  -->
                            <Popup x:Name="Popup"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"
                                            Margin="0,2,0,0"
                                            BorderThickness="2"
                                            CornerRadius="4">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource DropDownBorderColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource DropDownBackgroundColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6" SnapsToDevicePixels="True">
                                        <!--  Stack Panel of options  -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        <!--  / end  -->
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            <!--  / end  -->
                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--
                                If there aren't any items, then display
                                the popup with a height of 95
                            -->
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  / end  -->

        <!--  Combo Box Items  -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                                Background="Transparent"
                                BorderThickness="2"
                                Padding="4"
                                SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Transparent" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <!--
                                        When the item is selected,
                                        set the background and border colours
                                    -->
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBorderColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <!--  / end  -->
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedUnfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  / end  -->

    </Application.Resources>
</Application>
